#include <stdio.h>
#include <stdlib.h>
#include <limits.h>

int compare(const void *a, const void *b) {
    return (*(int*)a - *(int*)b);
}

void findMinDifferencePairs(int *arr, int size) {
	
	int i;
	
    if (size < 2) {
        printf("Array deve ter pelo menos dois elementos.\n");
        return;
    }

    qsort(arr, size, sizeof(int), compare);

    int minDiff = INT_MAX;
    int pairsCount = 0;

    for (i = 0; i < size - 1; i++) {
        int diff = arr[i + 1] - arr[i];
        if (diff < minDiff) {
            minDiff = diff;
            pairsCount = 1;
        } else if (diff == minDiff) {
            pairsCount++;
        }
    }

    int **pairs = (int **)malloc(pairsCount * sizeof(int *));
    if (pairs == NULL) {
        printf("Erro ao alocar memoria.\n");
        exit(1);
    }

    for (i = 0; i < pairsCount; i++) {
        pairs[i] = (int *)malloc(2 * sizeof(int));
        if (pairs[i] == NULL) {
            printf("Erro ao alocar memoria.\n");
            exit(1);
        }
    }

    int index = 0;
    for (i = 0; i < size - 1; i++) {
        int diff = arr[i + 1] - arr[i];
        if (diff == minDiff) {
            pairs[index][0] = arr[i];
            pairs[index][1] = arr[i + 1];
            index++;
        }
    }

    printf("Pares com a menor diferenca absoluta (%d):\n", minDiff);
    for (i = 0; i < pairsCount; i++) {
        printf("(%d, %d)\n", pairs[i][0], pairs[i][1]);
    }

    for (i = 0; i < pairsCount; i++) {
        free(pairs[i]);
    }
    free(pairs);
}

int main() {
    int arr[] = {4, 2, 1, 3, 5};
    int size = sizeof(arr) / sizeof(arr[0]);

    findMinDifferencePairs(arr, size);

    return 0;
}
